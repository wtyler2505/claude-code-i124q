{
  "mcpServers": {
    "rust-analyzer": {
      "name": "Rust Analyzer MCP",
      "description": "Language server integration for Rust development with semantic analysis",
      "command": "rust-analyzer-mcp",
      "args": [],
      "env": {}
    },
    "cargo-mcp": {
      "name": "Cargo MCP Server", 
      "description": "Integration with Cargo package manager and build system",
      "command": "cargo-mcp-server",
      "args": [],
      "env": {}
    },
    "crates-io": {
      "name": "Crates.io MCP",
      "description": "Search and manage Rust crates from crates.io registry",
      "command": "crates-io-mcp",
      "args": [],
      "env": {}
    },
    "rustdoc": {
      "name": "Rustdoc MCP",
      "description": "Generate and serve Rust documentation",
      "command": "rustdoc-mcp",
      "args": [],
      "env": {}
    },
    "tokio-console": {
      "name": "Tokio Console MCP",
      "description": "Debug and monitor async Rust applications using Tokio Console",
      "command": "tokio-console-mcp",
      "args": [],
      "env": {}
    },
    "diesel-cli": {
      "name": "Diesel CLI MCP",
      "description": "Database ORM operations for Rust applications",
      "command": "diesel-mcp",
      "args": [],
      "env": {
        "DATABASE_URL": "postgres://localhost/mydb"
      }
    },
    "sea-orm": {
      "name": "SeaORM MCP",
      "description": "Async ORM for Rust with comprehensive database support",
      "command": "sea-orm-mcp", 
      "args": [],
      "env": {}
    },
    "axum-mcp": {
      "name": "Axum Framework MCP",
      "description": "Web framework tooling for Axum applications",
      "command": "axum-mcp-server",
      "args": [],
      "env": {}
    },
    "warp-mcp": {
      "name": "Warp Framework MCP", 
      "description": "Filter-based web framework tooling for Warp applications",
      "command": "warp-mcp-server",
      "args": [],
      "env": {}
    },
    "actix-web": {
      "name": "Actix-web MCP",
      "description": "Actor-based web framework tooling for Actix applications", 
      "command": "actix-mcp-server",
      "args": [],
      "env": {}
    },
    "memory-bank": {
      "name": "Memory Bank MCP",
      "description": "Centralized memory system for AI agents",
      "command": "server-memory",
      "args": [],
      "env": {}
    },
    "sequential-thinking": {
      "name": "Sequential Thinking MCP",
      "description": "Helps LLMs decompose complex tasks into logical steps",
      "command": "code-reasoning",
      "args": [],
      "env": {}
    },
    "brave-search": {
      "name": "Brave Search MCP",
      "description": "Privacy-focused web search tool",
      "command": "server-brave-search", 
      "args": [],
      "env": {}
    },
    "google-maps": {
      "name": "Google Maps MCP",
      "description": "Integrates Google Maps for geolocation and directions",
      "command": "server-google-maps",
      "args": [],
      "env": {
        "GOOGLE_MAPS_API_KEY": "..."
      }
    },
    "deep-graph": {
      "name": "Deep Graph MCP (Code Graph)",
      "description": "Transforms Rust source code into semantic graphs via DeepGraph",
      "command": "mcp-code-graph-rust",
      "args": [],
      "env": {}
    }
  }
}